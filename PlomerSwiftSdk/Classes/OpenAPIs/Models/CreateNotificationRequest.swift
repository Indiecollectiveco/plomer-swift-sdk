//
// CreateNotificationRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct CreateNotificationRequest: Codable, JSONEncodable, Hashable {

    public enum ModelType: String, Codable, CaseIterable {
        case domainExpiry = "DOMAIN_EXPIRY"
        case sslExpiry = "SSL_EXPIRY"
        case websiteDown = "WEBSITE_DOWN"
        case contentChange = "CONTENT_CHANGE"
        case system = "SYSTEM"
    }
    public var text: String
    public var type: ModelType
    public var sendNotification: Bool? = true
    public var source: String?

    public init(text: String, type: ModelType, sendNotification: Bool? = true, source: String? = nil) {
        self.text = text
        self.type = type
        self.sendNotification = sendNotification
        self.source = source
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case text
        case type
        case sendNotification
        case source
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(text, forKey: .text)
        try container.encode(type, forKey: .type)
        try container.encodeIfPresent(sendNotification, forKey: .sendNotification)
        try container.encodeIfPresent(source, forKey: .source)
    }
}

