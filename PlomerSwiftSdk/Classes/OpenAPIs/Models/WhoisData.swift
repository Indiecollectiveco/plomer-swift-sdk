//
// WhoisData.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** WhoisData represents domain registration information including registrant and registrar details */
public struct WhoisData: Codable, JSONEncodable, Hashable {

    public var id: Int
    public var domainName: String
    public var registryDomainId: String
    public var updatedDate: String
    public var creationDate: String
    public var registrarRegistrationExpirationDate: String
    public var registrar: String
    public var domainStatus: String
    public var registrantName: String
    public var nameServer: String
    public var dnssec: String
    public var lastUpdateOfWhoisDatabase: String

    public init(id: Int, domainName: String, registryDomainId: String, updatedDate: String, creationDate: String, registrarRegistrationExpirationDate: String, registrar: String, domainStatus: String, registrantName: String, nameServer: String, dnssec: String, lastUpdateOfWhoisDatabase: String) {
        self.id = id
        self.domainName = domainName
        self.registryDomainId = registryDomainId
        self.updatedDate = updatedDate
        self.creationDate = creationDate
        self.registrarRegistrationExpirationDate = registrarRegistrationExpirationDate
        self.registrar = registrar
        self.domainStatus = domainStatus
        self.registrantName = registrantName
        self.nameServer = nameServer
        self.dnssec = dnssec
        self.lastUpdateOfWhoisDatabase = lastUpdateOfWhoisDatabase
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case domainName
        case registryDomainId
        case updatedDate
        case creationDate
        case registrarRegistrationExpirationDate
        case registrar
        case domainStatus
        case registrantName
        case nameServer
        case dnssec
        case lastUpdateOfWhoisDatabase
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(domainName, forKey: .domainName)
        try container.encode(registryDomainId, forKey: .registryDomainId)
        try container.encode(updatedDate, forKey: .updatedDate)
        try container.encode(creationDate, forKey: .creationDate)
        try container.encode(registrarRegistrationExpirationDate, forKey: .registrarRegistrationExpirationDate)
        try container.encode(registrar, forKey: .registrar)
        try container.encode(domainStatus, forKey: .domainStatus)
        try container.encode(registrantName, forKey: .registrantName)
        try container.encode(nameServer, forKey: .nameServer)
        try container.encode(dnssec, forKey: .dnssec)
        try container.encode(lastUpdateOfWhoisDatabase, forKey: .lastUpdateOfWhoisDatabase)
    }
}

