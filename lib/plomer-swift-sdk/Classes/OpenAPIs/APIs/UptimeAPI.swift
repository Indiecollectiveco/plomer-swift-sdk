//
// UptimeAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class UptimeAPI {

    /**
     Get uptime
     
     - parameter monitoringProfileId: (query)  
     - parameter days: (query)  (optional)
     - returns: [UptimeItem]
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getUptime(monitoringProfileId: Double, days: Double? = nil) async throws -> [UptimeItem] {
        return try await getUptimeWithRequestBuilder(monitoringProfileId: monitoringProfileId, days: days).execute().body
    }

    /**
     Get uptime
     - GET /uptime
     - Bearer Token:
       - type: http
       - name: bearerAuth
     - parameter monitoringProfileId: (query)  
     - parameter days: (query)  (optional)
     - returns: RequestBuilder<[UptimeItem]> 
     */
    open class func getUptimeWithRequestBuilder(monitoringProfileId: Double, days: Double? = nil) -> RequestBuilder<[UptimeItem]> {
        let localVariablePath = "/uptime"
        let localVariableURLString = plomer-swift-sdkAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "monitoringProfileId": (wrappedValue: monitoringProfileId.encodeToJSON(), isExplode: true),
            "days": (wrappedValue: days?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<[UptimeItem]>.Type = plomer-swift-sdkAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
